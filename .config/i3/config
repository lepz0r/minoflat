# ----- Start initialization script -----
set_from_resource $user echo "$USER"
exec sh -c "~/.minoflat/scripts/tiling-init && echo i3 > /tmp/minoflat_$user/current_wm & polybar -r mybar"

# ----- Xresources defined configs -----
set $mod Mod4

# Get resources from variable
set_from_resource $darkred     color1  #880000
set_from_resource $red         color9  #ff0000
set_from_resource $darkgreen   color2  #008800
set_from_resource $green       color10 #00ff00
set_from_resource $darkyellow  color3  #888800
set_from_resource $yellow      color11 #ffff00
set_from_resource $darkblue    color4  #000088
set_from_resource $blue        color12 #0000ff
set_from_resource $darkmagenta color5  #880088
set_from_resource $magenta     color13 #ff00ff
set_from_resource $darkcyan    color6  #008888
set_from_resource $cyan        color14 #00ffff
set_from_resource $darkwhite   color7  #888888
set_from_resource $white color15 #ffffff
set_from_resource $background background #000000
set_from_resource $foreground foreground #ffffff
set_from_resource $accent accent #000088
set_from_resource $font sansserif

# ----- Variables -----

# Set a terminal
set $terminal ~/.minoflat/scripts/launch_terminal

# Set a launcher
set $launcher rofi -terminal $term -sort -levenshtein-sort -matching normal -show run -modi run -location 1 rofi -show run -modi run -location 1 -separator-style none -bw 0 -lines 1 -columns 10 -width 100 -disable-history -hide-scrollbar -kb-row-select "Tab" -kb-row-tab ""

# ----- General -----
# click to focus
focus_follows_mouse no

# set gap
smart_gaps on
gaps inner 7

# set border
smart_borders on

new_window pixel 3
new_float pixel 3

# ----- Keybindings -----

# Set a modifier

set $mod Mod4

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Start a terminal
bindsym $mod+Return exec $terminal

# Start a Launcher
bindsym $mod+d exec $launcher
#bindsym $mod+d exec dmenu_run -nf "$foreground" -nb "$background" -sb "$accent" -sb "$background" -fn "$font" # uncomment if you use dmenu (because i3 doesn't support recursive variable)


# Kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym Mod1+minus scratchpad show

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace, & reload .Xresources
bindsym $mod+Shift+r exec "~/.minoflat/scripts/minoflat-system-menu reload"
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec "~/.minoflat/scripts/minoflat-system-menu -m 'Are you sure you want to quit i3? ' -q 'i3-msg exit' quit"
# open system menu
bindsym $mod+Shift+s exec "~/.minoflat/scripts/minoflat-system-menu"

# Bind media keys
bindsym XF86AudioRaiseVolume exec "amixer -q sset Master playback 5%+ unmute"
bindsym XF86AudioLowerVolume exec "amixer -q sset Master playback 6%- unmute"
bindsym XF86AudioMute exec "amixer -q sset Master toggle"
bindsym XF86AudioPlay exec "playerctl play-pause"
bindsym XF86AudioPause exec "playerctl play-pause"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioStop exec "playerctl stop"

# Alternative media control (for keyboards without media keys)
bindsym $mod+F11 exec "amixer -q sset Master playback 1%+ unmute"
bindsym $mod+F9 exec "amixer -q sset Master playback 6%- unmute"
bindsym $mod+F10 exec "amixer -q sset Master toggle"
bindsym $mod+F6 exec "playerctl play-pause"
bindsym $mod+F5 exec "playerctl previous"
bindsym $mod+F7 exec "playerctl next"

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# take a screenshot
bindsym --release Print exec scrot ~/Pictures/Screenshots/%Y-%m-%d-%H.png

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"



# Set Fonts
font pango:$font 8

# Set window colors
# class			border		backgr.		text		indicator	child_border
client.focused		$accent		$accent		$background	$foreground	$accent
client.unfocused	$accent		$background	$foreground	$foreground	$background
client.focused_inactive	$accent		$accent		$foreground	$foreground	$background
client.urgent		$color9		$color9		$foreground	$foreground	$color9
client.background	$background

#bar {
#	position top
#        status_command i3status
#	font pango:$font 10
#	colors{
#	statusline $foreground
#	focused_workspace $accent $accent $background
#	active_workspace $accent $accent $background
#	inactive_workspace $background $background $foreground
#	urgent_workspace $color9 $color9 $background
#	background $background
#	}
#}
